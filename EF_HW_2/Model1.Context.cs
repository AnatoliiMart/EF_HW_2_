//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EF_HW_2
{
    using System;
    using System.Collections.Generic;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;

    public partial class MyLibraryEntities : DbContext
    {
        public MyLibraryEntities()
            : base("name=MyLibraryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Authors> Authors { get; set; }
        public virtual DbSet<Books> Books { get; set; }
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<Presses> Presses { get; set; }

        public void AddBook(string bookName, int bookPagesCount, string authorName,
                           string authorSurname, string categoryName, string pressName)
        {
            Books book = new Books() { Name = bookName, PagesCount = bookPagesCount };

            var getAuthor = from author in Authors
                            where author.Name.ToLower() == authorName.ToLower() && author.Surname.ToLower() == authorSurname.ToLower()
                            select author;
            var getPress = from press in Presses
                           where press.Name.ToLower() == pressName.ToLower()
                           select press;
            var getCategory = from category in Categories
                              where category.Name.ToLower() == categoryName.ToLower()
                              select category;
            if (getAuthor.FirstOrDefault() != null)
                book.Authors = getAuthor.FirstOrDefault();
            else
                book.Authors = new Authors() { Name = authorName, Surname = authorSurname };
            if (getPress.FirstOrDefault() != null)
                book.Presses = getPress.FirstOrDefault();
            else
                book.Presses = new Presses() { Name = pressName };
            if (getCategory.FirstOrDefault() != null)
                book.Categories = getCategory.FirstOrDefault();
            else
                book.Categories = new Categories() { Name = categoryName };

            Books.Add(book);
            SaveChanges();
        }

        public List<Books> SearchByAuthor(string authorName)
        {
            Authors author = Authors.Where(a => a.Name.ToLower() == authorName.ToLower()).FirstOrDefault();
            List<Books> books = new List<Books>();
            if (author != null)
            {
                Entry(author).Collection("Books").Load();
                foreach (var item in author.Books)
                    books.Add(item);
            }
            return books;
        }

        public List<Books> SearchByBookName(string bookName)
        {
            var res = from b in Books
                      where b.Name.ToLower() == bookName.ToLower()
                      select b;
            return res.ToList();
        }

        public List<Books> SearchByCategory(string categoryName)
        {
            Categories category = Categories.Where(a => a.Name.ToLower() == categoryName.ToLower()).FirstOrDefault();
            List<Books> books = new List<Books>();
            if (category != null)
            {
                Entry(category).Collection("Books").Load();
                foreach (var item in category.Books)
                    books.Add(item);
            }
            return books;
        }

        public List<Books> SearchByPressName(string pressName)
        {
            Presses press = Presses.Where(a => a.Name.ToLower() == pressName.ToLower()).FirstOrDefault();
            List<Books> books = new List<Books>();
            if (press != null)
            {
                Entry(press).Collection("Books").Load();
                foreach (var item in press.Books)
                    books.Add(item);
            }
            return books;
        }
    }
}
